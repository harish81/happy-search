{"version":3,"sources":["logo.png","components/Logo.js","components/SearchBox.js","components/ButtonBar.js","components/card/Card.js","components/list/List.js","components/list/ListItem.js","components/Settings.js","components/engine/Engine.js","components/util/data.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","props","className","src","logo","alt","style","width","marginTop","SearchBox","onSuggestionsFetchRequested","value","fetch","proxyurl","then","res","text","suggestions","suggestNodes","window","DOMParser","parseFromString","getElementsByTagName","i","length","push","getAttribute","setState","onTextChange","event","newValue","method","changeSearch","onPressEnter","keyCode","onSearch","onSuggestionsClearRequested","state","this","inputProps","onChange","onKeyDown","autoFocus","alignSelf","color","getSuggestionValue","suggestion","renderSuggestion","changeCategory","categories","map","category","key","Component","ButtonBar","type","onClick","settingBox","jQuery","is","fadeIn","fadeOut","titleStyle","textTransform","fontWeight","fontSize","cursor","Card","data-toggle","href","title","role","aria-expanded","aria-controls","id","children","List","ListItem","updateSites","site","url","name","checked","htmlFor","marginRight","Settings","filterByCategory","sites","filter","index","selectedSites","includes","Engine","updateSearchEngine","e","target","engine","data","App","searchEngine","siteUrl","siteUrls","Set","selectedSite","add","delete","val","searchTerm","cat","searchQuery","searchUrl","join","open","datas","sort","showSettings","screenSize","screen","height","document","backgroundImage","display","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Popper","require","default","$","ReactDOM","render","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bf1b8ef3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cee1aa57.png\";","import React from 'react';\nimport logo from \"../logo.png\";\n\nconst Logo = (props) => {\n    return (\n        <div className=\"d-flex justify-content-center\">\n            <img src={logo} alt=\"logo\" className=\"img-fluid\"\n                 style={{width: '9rem', marginTop: '3.7rem'}}/>\n        </div>\n    );\n};\n\nexport default Logo;","import React, {Component} from 'react';\nimport * as Icons from \"react-feather\";\nimport Autosuggest from 'react-autosuggest';\n\nclass SearchBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            suggestions: []\n        };\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";//todo: change at production\n        fetch(proxyurl + \"https://clients1.google.com/complete/search?hl=en&output=toolbar&q=\" + value)\n            .then(res => {\n                return res.text();\n            }).then(res => {\n            let xml = (new window.DOMParser()).parseFromString(res, \"text/xml\");\n            let suggestions = [];\n            let suggestNodes = xml.getElementsByTagName(\"suggestion\");\n            for (let i = 0; i < suggestNodes.length; i++) {\n                suggestions.push(suggestNodes[i].getAttribute(\"data\"));\n            }\n            this.setState({suggestions: suggestions});\n        });\n    };\n\n    onTextChange = (event, { newValue, method })=>{\n        this.setState({value:newValue});\n        this.props.changeSearch(newValue);\n    };\n\n    onPressEnter = (event)=>{\n        if (event.keyCode === 13) {\n            this.props.onSearch();\n        }\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({ suggestions: [] });\n    };\n\n    render() {\n        const { value, suggestions } = this.state;\n        const props = this.props;\n        const inputProps = {\n            value,\n            onChange: this.onTextChange,\n            className: \"text-input\",\n            onKeyDown: this.onPressEnter,\n            autoFocus: true,\n        };\n        return (\n            <div className=\"d-flex justify-content-center\" style={{marginTop: '3.2rem'}}>\n                <div className=\"search-box d-flex\">\n                    <Icons.Search style={{alignSelf: 'center', color: '#E0E0E0'}}/>\n                    <Autosuggest\n                        suggestions={suggestions}\n                        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                        getSuggestionValue={(suggestion)=>(suggestion)}\n                        renderSuggestion={(suggestion)=>(<span>{suggestion}</span>)}\n                        inputProps={inputProps} />\n                    <select className=\"select-input\" onChange={props.changeCategory}>\n                        <option value=\"-1\">None</option>\n                        {\n                            props.categories.map(category => (\n                                <option key={category}>{category}</option>\n                            ))\n                        }\n                    </select>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst ButtonBar = (props) => {\n    return (\n        <div className=\"d-flex justify-content-center\" style={{marginTop: '2rem'}}>\n            <button className=\"btn btn-primary\" type=\"button\" onClick={props.onSearch}>Happy Search</button>\n            <button className=\"btn btn-outline-light ml-3\" type=\"button\"\n                    onClick={event => {\n                        let settingBox = window.jQuery(\".settings-box\");\n                        if(settingBox.is(\":hidden\")) {\n                            settingBox.fadeIn();\n                        }else{\n                            settingBox.fadeOut();\n                        }\n                    }}\n            >Advanced Settings\n            </button>\n        </div>\n    );\n};\n\nexport default ButtonBar;","import React from 'react';\nimport * as Icons from 'react-feather';\n\nconst titleStyle = {\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n    fontSize: '.8rem',\n    color: '#acacac',\n    cursor: 'pointer'\n};\nconst Card = (props) => {\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <h5 className=\"d-flex justify-content-between align-items-center\"\n                    style={titleStyle}\n                    data-toggle=\"collapse\"\n                    href={\"#collapse\"+props.title}\n                    role=\"button\"\n                    aria-expanded=\"false\"\n                    aria-controls={\"collapse\"+props.title}>\n                    <span>{props.title}</span>\n                    <Icons.ChevronDown/>\n                </h5>\n                <div className=\"collapse show\" id={\"collapse\"+props.title}>\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\n\nconst List = (props) => {\n    return (\n        <ul className=\"list-group\">\n            {props.children}\n        </ul>\n    );\n};\n\nexport default List;","import React from 'react';\n\nconst ListItem = (props) => {\n    return (\n        <li className=\"list-group-item\">\n            <div className=\"custom-control custom-checkbox\">\n                <input onChange={event => props.updateSites(event, props.site.url)} type=\"checkbox\"\n                       className=\"custom-control-input\" id={props.site.name + \"_check\"}\n                       checked={props.checked}\n                       name={props.site.name + \"_check\"}/>\n                <label className=\"custom-control-label\" htmlFor={props.site.name + \"_check\"}>\n                    <img src={props.site.logo} className=\"rounded-circle\" style={{width: '20px', marginRight: '4px'}}\n                         alt=\"logo\"/>\n                    {props.children}\n                </label>\n            </div>\n        </li>\n    );\n};\n\nexport default ListItem;","import React, {Component} from 'react';\nimport Card from \"./card/Card\";\nimport List from \"./list/List\";\nimport ListItem from \"./list/ListItem\";\n\nclass Settings extends Component {\n    filterByCategory = (category) => {\n        return this.props.sites.filter(site => (site.category === category));\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"card-columns\">\n                    {this.props.categories.map((category, index) => (\n                        <Card title={category} key={index}>\n                            <List>\n                                {this.filterByCategory(category).map(site => (\n                                    <ListItem checked={this.props.selectedSites.includes(site.url)}\n                                              updateSites={this.props.updateSites} key={site.url}\n                                              site={site}>{site.name}</ListItem>\n                                ))}\n                            </List>\n                        </Card>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Settings;","import React, {Component} from 'react';\n\nclass Engine extends Component {\n    updateSearchEngine = (e)=>{\n        this.props.updateSearchEngine(e.target.value);\n    };\n    render() {\n        return (\n            <ul className=\"list-group list-group-horizontal\">\n                <li className=\"list-group-item\">\n                    <div className=\"custom-control custom-radio\">\n                        <input type=\"radio\" className=\"custom-control-input\" name=\"search_engine\" id=\"search_engine_google\" value=\"google\"\n                               onChange={this.updateSearchEngine} checked={this.props.engine==='google'}/>\n                        <label className=\"custom-control-label\" htmlFor=\"search_engine_google\">\n                            <img src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" className=\"rounded-circle\"\n                                 style={{width: '19px', marginRight: '4px'}} alt=\"logo\"/>\n                            Google\n                        </label>\n                    </div>\n                </li>\n                <li className=\"list-group-item\">\n                    <div className=\"custom-control custom-radio\">\n                        <input type=\"radio\" className=\"custom-control-input\" name=\"search_engine\" id=\"search_engine_duckduckgo\" value=\"duckduckgo\"\n                               onChange={this.updateSearchEngine} checked={this.props.engine==='duckduckgo'}/>\n                        <label className=\"custom-control-label\" htmlFor=\"search_engine_duckduckgo\">\n                            <img src=\"https://duckduckgo.com/assets/logo_header.v108.svg\" className=\"rounded-circle\"\n                                 style={{width: '19px', marginRight: '4px'}} alt=\"logo\"/>\n                            DuckDuckGo\n                        </label>\n                    </div>\n                </li>\n                <li className=\"list-group-item\">\n                    <div className=\"custom-control custom-radio\">\n                        <input type=\"radio\" className=\"custom-control-input\" name=\"search_engine\" id=\"search_engine_devdocs\" value=\"devdocs\"\n                               onChange={this.updateSearchEngine} checked={this.props.engine==='devdocs'}/>\n                        <label className=\"custom-control-label\" htmlFor=\"search_engine_devdocs\">\n                            <img src=\"https://cdn.devdocs.io/images/apple-icon-72.png\" className=\"rounded-circle\"\n                                 style={{width: '19px', marginRight: '4px'}} alt=\"logo\"/>\n                            DevDocs\n                        </label>\n                    </div>\n                </li>\n            </ul>\n        );\n    }\n}\n\nexport default Engine;","export const data = {\n    categories: [\n        \"general\",\n        \"php\",\n        \"laravel\",\n        \"javascript\",\n        \"css\",\n        \"design\",\n        \"codeigniter\",\n        \"android\"\n    ],\n    sites: [\n        {\n            name: \"StackOverflow\",\n            url: \"stackoverflow.com\",\n            logo: \"https://cdn.sstatic.net/Sites/stackoverflow/company/img/logos/so/so-icon.svg\",\n            category: \"general\"\n        },\n        {\n            name: \"GitHub\",\n            url: \"github.com\",\n            logo: \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n            category: \"general\"\n        },\n        {\n            name: \"GitHub Gist\",\n            url: \"gist.github.com\",\n            logo: \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n            category: \"general\"\n        },\n        {\n            name: \"Php.Net\",\n            url: \"php.net\",\n            logo: \"https://www.php.net/images/logos/php-logo.svg\",\n            category: \"php\"\n        },\n        {\n            name: \"Unsplash\",\n            url: \"unsplash.com\",\n            logo: \"https://unsplash.com/a/img/marketing/press-symbol.svg\",\n            category: \"design\"\n        },\n        {\n            name: \"Laracast\",\n            url: \"laracasts.com\",\n            logo: \"https://assets.laracasts.com/images/symbol-original.svg\",\n            category: \"laravel\"\n        },\n        {\n            name: \"Laravel\",\n            url: \"laravel.com\",\n            logo: \"https://laravel.com/img/logomark.min.svg\",\n            category: \"laravel\"\n        },\n        {\n            name: \"FlatIcon\",\n            url: \"flaticon.com\",\n            logo: \"https://res-2.cloudinary.com/toolmuse/image/upload/v1468858840/production_flaticon_id63n1.png\",\n            category: \"design\"\n        },\n        {\n            name: \"The Noun Project\",\n            url: \"thenounproject.com\",\n            logo: \"https://upload.wikimedia.org/wikipedia/commons/8/85/The_Noun_Project_logo.svg\",\n            category: \"design\"\n        },\n        {\n            name: \"CodeIgniter\",\n            url: \"codeigniter.com\",\n            logo: \"https://codeigniter.com/assets/images/ci-logo-big.png\",\n            category: \"codeigniter\"\n        },\n        {\n            name: \"MDN Javascript\",\n            url: \"developer.mozilla.org/en-US/docs/Web/JavaScript\",\n            logo: \"https://upload.wikimedia.org/wikipedia/commons/6/67/Firefox_Logo%2C_2017.svg\",\n            category: \"javascript\"\n        },\n        {\n            name: \"MDN CSS\",\n            url: \"developer.mozilla.org/en-US/docs/Web/CSS\",\n            logo: \"https://upload.wikimedia.org/wikipedia/commons/6/67/Firefox_Logo%2C_2017.svg\",\n            category: \"css\"\n        },\n        {\n            name: \"Android Developers\",\n            url: \"developer.android.com\",\n            logo: \"https://developer.android.com/images/robot-tiny.png\",\n            category: \"android\"\n        },\n    ]\n};","import React, {Component} from 'react';\nimport Logo from \"./Logo\";\nimport SearchBox from \"./SearchBox\";\nimport ButtonBar from \"./ButtonBar\";\nimport Settings from \"./Settings\";\nimport Engine from \"./engine/Engine\";\nimport {data} from \"./util/data\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        let datas = data;\n        datas.categories.sort();\n        this.state = {...datas, searchEngine: 'google', selectedSite: [], searchTerm: '', showSettings: false};\n    }\n\n    updateSearchEngine = (engine) => {\n        this.setState({searchEngine: engine});\n    };\n    updateSites = (e, siteUrl) => {\n        let siteUrls = new Set(this.state.selectedSite);\n        if (e.target.checked) {\n            siteUrls.add(siteUrl);\n        } else {\n            siteUrls.delete(siteUrl);\n        }\n\n        this.setState({selectedSite: [...siteUrls]});\n    };\n    changeSearch = (val) => {\n        this.setState({searchTerm: val})\n    };\n    changeCategory = (e) => {\n        let cat = e.target.value;\n        if (cat !== -1) {\n            let sites = this.state.sites.filter(site => {\n                return site.category === cat;\n            });\n            sites = sites.map(site => site.url);\n            this.setState({selectedSite: sites});\n        } else {\n            this.setState({selectedSite: []});\n        }\n    };\n    onSearch = () => {\n        let searchQuery = this.state.searchTerm + \" \";\n        let searchUrl = \"\";\n        switch (this.state.searchEngine) {\n            case \"duckduckgo\":\n                if (this.state.selectedSite.length > 0)\n                    searchQuery += \"site:\" + this.state.selectedSite.join();\n                searchUrl = \"https://duckduckgo.com/?q=\";\n                break;\n            case \"devdocs\":\n                searchUrl = \"https://devdocs.io/#q=\";\n                break;\n            default:\n                searchQuery += this.state.selectedSite.map(url => 'site:' + url).join(\" OR \");\n                searchUrl = \"https://www.google.com/search?q=\";\n                break;\n        }\n\n        window.open(searchUrl + searchQuery, \"_blank\");\n    };\n\n\n    componentDidMount() {\n        let screenSize = window.screen.width+\"x\"+window.screen.height;\n        fetch(`https://source.unsplash.com/${screenSize}/daily/?nature`)\n            .then(res => {\n                let body = document.getElementsByTagName(\"body\")[0];\n                body.style.backgroundImage = `linear-gradient(rgba(0, 0, 0, .3), rgba(0, 0, 0, .3)), url(\"${res.url}\")`;\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"container\">\n                    <Logo/>\n                    <SearchBox changeCategory={this.changeCategory}\n                               categories={this.state.categories}\n                               changeSearch={this.changeSearch}\n                               searchTerm={this.state.searchTerm} onSearch={this.onSearch}/>\n                    <ButtonBar onSearch={this.onSearch}/>\n                </div>\n                <div className=\"settings-box\" style={{display: 'none'}}>\n                    <div className=\"container d-flex justify-content-center\" style={{marginTop: '3rem'}}>\n                        <Engine updateSearchEngine={this.updateSearchEngine} engine={this.state.searchEngine}/>\n                    </div>\n                    <div className=\"container\" style={{marginTop: '3rem'}}>\n                        <Settings sites={this.state.sites} categories={this.state.categories}\n                                  selectedSites={this.state.selectedSite}\n                                  updateSites={this.updateSites}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\ntry {\n    window.Popper = require('popper.js').default;\n    window.$ = window.jQuery = require('jquery');\n    require('bootstrap');\n} catch (e) {}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}